import requests
import random
from threading import Thread,Lock
from Decorator import prStyle
import scanner
import suggestor
found = False
class request_performer(Thread):
       def __init__(self,u,header):
             Thread.__init__(self)
             self.u = u
             self.header = header
       def run(self):
             
             reg='example'
             val = random.randint(0, 1000)
             url=self.u+"?cb="+str(val)
             he={self.header:'example.com'}
             try:
                   r=requests.get(url,headers=he,allow_redirects=False)
                   threadlock.acquire()   
                   if (r.text).find(reg) != -1 : 
                        global found
                        found=True
                        print("--------------------------------------------------------")
                        prStyle("Un-Keyed Header:"+str(self.header))
                        scanner.crossite(self.header,r.text.split("\n"),url)
                        suggestor.suggestor(self.header,url)
                   elif(self.header=="X-Forwarded-Host" and found==False):
                         prStyle("Not Vulnerable to Cross site Scripting ","black on green")
                   if(self.header=="X-Forwarded-Scheme"):
                        prStyle("\nChecking For Open Redirect ....","yellow")
                        scanner.openre(url)
                   threadlock.release() 
             except:
                        pass
       
     
threadlock=Lock()               






