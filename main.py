from threading import Lock, Thread
import enumerate
import sys,bruteforce
import getopt
from bruteforce import request_performer
from Decorator import prStyle, printtable, title
global hit
hit = "1"

def start(argv):
        title()
        try:
               opts,args = getopt.getopt(argv, "u:w:t")
        except getopt.GetoptError:
               print("Error on arguements")
               sys.exit()
        for opt,arg in opts:
               if opt == '-u':
                     url = arg
               elif opt == '-w':
                     wordlist = arg
               elif opt == '-t':
                     threads = int(sys.argv[6])
        printtable(url,wordlist,threads)
        
        f = open(wordlist,"r")
        headers = f.readlines()
        headers = list(map(lambda headers: headers.strip(), headers))
        enumerate.enumerate(url)
        launcher_thread(headers,threads,url)            
def launcher_thread(header,th,u):
    global i
    i = []
    t=[]
    i.append(0)
    print("\n\n------------------------ Param Miner ---------------------------\n \n") 
    prStyle("Finding Unkeyed Inputs.....","yellow")
   
    while len(header):
          if hit == "1":
                  try:
                          if i[0] < th:
                                  head = header.pop(0)
                                  i[0] = i[0] + 1
                                  thread = request_performer(u,head)
                                  thread.start()
                                  
                                  t.append(thread)
                  except KeyboardInterrupt:
                           print("Interrupted")
                           sys.exit()
    for i in t:
          i.join()            
    print("\n\n--------------------- Param Miner Ended -----------------------\n\n")  


if __name__== "__main__":
      try:
         start(sys.argv[1:])
      except KeyboardInterrupt:
         prStyle("Scan Aborted","white on red")




